generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model card {
  card_id               Int       @id @default(autoincrement())
  user_email            String    @db.VarChar(255)
  title                 String?   @db.Text
  front                 String?   @db.Text
  back                  String?   @db.Text
  tags                  Json?
  created_date          DateTime  @default(now())
  modified_date         DateTime?
  recalled_first_date   DateTime?
  recalled_second_date  DateTime?
  recalled_third_date   DateTime?
  recalled_fourth_date  DateTime?
  recalled_fifth_date   DateTime?
  recalled_first_score  Int?
  recalled_second_score Int?
  recalled_third_score  Int?
  recalled_fourth_score Int?
  recalled_fifth_score  Int?
}

model post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  content   String?  @db.Text
  published Boolean  @default(false)
  authorId  Int
  user      user     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Post_ibfk_1")

  @@index([authorId], map: "authorId")
}

model profile {
  id     Int     @id @default(autoincrement())
  bio    String? @db.Text
  userId Int     @unique(map: "userId")
  user   user    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Profile_ibfk_1")
}

model user {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  email   String   @unique(map: "email") @db.VarChar(255)
  post    post[]
  profile profile?
}
